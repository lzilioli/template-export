0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.1.6
3 info using node@v0.10.33
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/Users/lzilioli/Desktop/uitools/template-export',
8 silly cache add   type: 'directory' }
9 verbose tar pack [ '/Users/lzilioli/.npm/template-export/0.1.3/package.tgz',
9 verbose tar pack   '/Users/lzilioli/Desktop/uitools/template-export' ]
10 verbose tarball /Users/lzilioli/.npm/template-export/0.1.3/package.tgz
11 verbose folder /Users/lzilioli/Desktop/uitools/template-export
12 info prepublish template-export@0.1.3
13 verbose addLocalTarball adding from inside cache /Users/lzilioli/.npm/template-export/0.1.3/package.tgz
14 silly cache afterAdd template-export@0.1.3
15 verbose afterAdd /Users/lzilioli/.npm/template-export/0.1.3/package/package.json not in flight; writing
16 verbose afterAdd /Users/lzilioli/.npm/template-export/0.1.3/package/package.json written
17 silly publish { name: 'template-export',
17 silly publish   version: '0.1.3',
17 silly publish   main: './lib/template-export.js',
17 silly publish   author:
17 silly publish    { name: 'Luke Zilioli',
17 silly publish      email: 'elzee08@gmail.com',
17 silly publish      url: 'http://lukezilioli.com/' },
17 silly publish   dependencies:
17 silly publish    { underscore: '^1.6.0',
17 silly publish      'lz-node-utils': '^0.1.1',
17 silly publish      'yaml-front-matter': '^3.0.1' },
17 silly publish   devDependencies:
17 silly publish    { grunt: '~0.4.5',
17 silly publish      'grunt-contrib-jshint': '~0.6.0',
17 silly publish      'grunt-contrib-watch': '~0.5.3',
17 silly publish      'grunt-jsbeautifier': '~0.2.7',
17 silly publish      'grunt-todo': '~0.4.0',
17 silly publish      'jshint-stylish': '^0.4.0',
17 silly publish      'load-grunt-config': '^0.12.0',
17 silly publish      shelljs: '~0.3.0' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/lzilioli/template-export.git' },
17 silly publish   keywords:
17 silly publish    [ 'grunt',
17 silly publish      'template',
17 silly publish      'export',
17 silly publish      'node',
17 silly publish      'handlebars',
17 silly publish      'static-site' ],
17 silly publish   bugs: { url: 'https://github.com/lzilioli/template-export/issues' },
17 silly publish   license: 'MIT',
17 silly publish   homepage: 'https://github.com/lzilioli/template-export',
17 silly publish   gitHead: '9c06ceb9b62a5ce9eb44d510886a119e3eff3088',
17 silly publish   readme: 'template-export\n===============\n\nWant to use this with grunt? There\'s a [grunt task](http://www.github.com/lzilioli/grunt-template-export) that wraps this module.\n\nA module, in MVC terms, a controller that acts as a near-transparent liason between a model and a view (referred to as a translator within this project). It enables the simple, yet highly custom exporting of templates (or other content) to a given destination.\n\nThe template-export module has five primary concerns:\n\n1. initialization\n2. given a path to a file:\n    - fetch a model from a user-defined module\n    - pass the contents of the file, along with the model, through a user-defined translation module\n3. return the result of (2)\n4. enforce a light-handed, yet reasonable separation between the model and the translator\n\nThe magic is in the fact that the model fetching and translation are both handeled by user-defined modules that simply need to expose a pre-determined API. As long as the modules follow this API, they can do anything they need to under-the-hood in order to generate the proper output. Specifying an implementation for either of these modules is optional.\n\n## Usage\n\n```bash\nnpm install --save lzilioli/template-export\n```\n\n\n```javascript\nvar handlebars = require( \'handlebars\' );\nvar fs = require( \'fs\' );\nvar templateExport = require( \'template-export\' );\nvar exporter = templateExport.exporter({\n  /* NOTE: The opts argument passed to model.getModel, model.init,\n   * translator.init, and translator.translate will contain all of\n   * the options passed in except for the following 3\n   * reserved keys (explained below):\n   *  [ sourceFiles | translator | model ] */\n  sourceFiles: {\n    /* This should be an object containing key/value\n     * pairs, where each value specifies a set of files\n     * associated with the given key (array).\n     *\n     * The value is passed to function that does the equivalent\n     * of grunt\'s file.expand function.\n     *\n     * The resulting object will then be passed to\n     * model.init and translator.init. Those functions\n     * may do with the object what they please.\n     *\n     * This might be used to pass a list of markdown files\n     * to your model, and a set of templates to your\n     * translator for proper rendering. It\'s all up\n     * to you. */\n    templates: [ \'templates/**/*.tmpl\' ],\n    posts: [ \'blog/posts/**/*.md\' ]\n  },\n  /* Below are the default implementations for a model and a\n   * translator. If you don\'t provide either in the task options,\n   * the default implementation will be used. Additionally,\n   * if the model or translator that you provide omits one\n   * of the expected functions, the task will fall back on the\n   * implementations provided below for that function only. */\n  model: {\n    init: _.noop,\n    getModel: function() { return { }; }\n  },\n  translator: {\n    init: _.noop,\n    translate: _.identity\n    // _.identity is a fn that returns it\'s first arg\n  }\n});\n\n/* The call to exporter returns a function that takes a path to a template,\n * and a options object. It will return the rendered version of the template\n * according to the translator, using the model returned by your model\'s\n * getModel function. */\n\n/****** EXAMPLES ************************************/\n\n// Get the rendered homepage, specified by src/templates/index.tmpl\nvar homepageExporter = templateExport({\n  sourceFiles: {\n      templates: \'templates/**/*.tmpl\'\n  },\n  /* A default handlebars translator is provided. This\n   * translator will automatically register all of the\n   * templates specified in options.templates that pass\n   * the isPartial test with handlebars with the name\n   * returned by getPartialName.\n   *\n   * During translation, your template will be run through\n   * handlebars with the designated partials registered.\n   *\n   * See the below "Extending the Default Translator" section\n   * for an example on inheriting some of the default handlebars\n   * translator\'s functionality. */\n  translator: templateExport.translators.handlebars(\n    /* You must pass handlebars as your first argument\n     * (see v0.0.2 commit for v0.0.2 for an explanation) */\n    handlebars.create(),\n    /* The second argument is optional. It allows you to\n     * specify functions to determine if a template\n     * should be considered a partial (isPartial), and if so,\n     * what name to register with handlebars (getPartialName)\n     * If either is omitted, the default implementations\n     * (shown below) will be used. */\n    {\n      getPartialName: function( partialPath ) {\n        // The relative path of the partial from sourceDir, without the .tmpl extension\n        return partialPath.replace( \'.tmpl\', \'\' );\n      },\n      isPartial: function( filePath ) {\n        // Something is considered a partial if the filename begins with `_`\n        return path.basename( filePath )[ 0 ] === \'_\';\n      }\n    }\n  ),\n  /* Use a static model */\n  model: {\n    getModel: function(){ fs.readFileSync( \'static-models/home.json\' ) }\n  }\n});\n\nvar homepageContents = homepageExporter(\'src/templates/index.tmpl\');\n```\n\n### Options\n\n#### `options.sourceFiles`\n\n-- see the *Configuring the Task* section above for an explanation of this argument\n\n#### `options.translator`\n\n##### `options.translator.init`\n\n    function( sourceFiles, opts )\n\n- return\n-- none\n- sourceFiles\n-- see the *Configuring the Task* section above for an explanation of this argument\n- opts\n-- all options passed to the task except ( translator, model, sourceFiles )\n\n##### `options.translator.translate`\n\n    function( templateContents, model, opts, templatePath )\n\n- return\n-- string\n- templateContents\n-- the contents of the template being translated\n- model\n-- the model as returned by `options.model.getModel()`\n- opts\n-- all options passed to the task except ( translator, model, templates )\n- templatePath\n-- the path to the source template containing templateContents\n\n#### `options.model`\n\n##### `options.model.init`\n\n    function( sourceFiles, opts )\n\n- return\n-- none\n- sourceFiles\n-- see the *Configuring the Task* section above for an explanation of this argument\n- opts\n-- all options passed to the task except ( translator, model, templates )\n\n##### `options.model.getModel`\n\n    function( opts, templatePath, templateContents )\n\n- return\n-- Object\n- opts\n-- all options passed to the task except ( translator, model, templates )\n- templatePath\n-- the path to the source template containing templateContents\n- templateContents\n-- the contents of the template being translated\n- theTemplates\n-- list of template files as passed to `options.templates`\n\n### Extending the Default Translator\n\nSay you want to register a set of helper functions with handlebars to make available during the export step. You can define the following translator, and pass it in the options to template-export.\n\n```javascript\nvar _ = require( \'underscore\' );\nvar handlebars = require( \'handlebars\' );\nvar defaultTranslators = require( \'template-export\' ).translators;\n\nmodule.exports = function( translatorToUse, helperOverrides ) {\n\n    var __parent = defaultTranslators.handlebars(handlebars, helperOverrides);\n\n    var helpers = {\n        siteUrl: function( siteDest ) {\n            return \'http://www.example.com/\' + siteDest\n        }\n    };\n\n    return {\n        init: function() {\n            // register some additional helpers\n            handlebars.registerHelper( helpers );\n            __parent.init.apply( this, arguments );\n        },\n        translate: function() {\n            return __parent.translate.apply( this, arguments );\n        }\n    };\n};\n```\n\n# Changelog\n\n- v0.1.2\n-- translator-handlebars strips YAML front matter from template contents prior to passing to handlebars\n- v0.1.3\n-- use lz-node-utils package from npm\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   description: 'template-export ===============',
17 silly publish   _id: 'template-export@0.1.3',
17 silly publish   scripts: {},
17 silly publish   _shasum: '93c84e1295c1b5eb3bc83a191ae1bfd04a10b562',
17 silly publish   _from: '.' }
18 verbose mapToRegistry name template-export
19 verbose mapToRegistry uri https://registry.npmjs.org/template-export
20 verbose publish registryBase https://registry.npmjs.org/
21 verbose request on initialization, where is /template-export
22 verbose request after pass 1, where is /template-export
23 verbose request url raw /template-export
24 verbose request resolving registry [ 'https://registry.npmjs.org/', './template-export' ]
25 verbose request after pass 2, where is https://registry.npmjs.org/template-export
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 12:04:48
28 verbose request id da49c7534d8fb786
29 http request PUT https://registry.npmjs.org/template-export
30 http 403 https://registry.npmjs.org/template-export
31 verbose headers { date: 'Thu, 04 Dec 2014 18:04:49 GMT',
31 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
31 verbose headers   'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '230',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   'x-served-by': 'cache-ord1721-ORD',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1417716289.152917,VS0,VE124',
31 verbose headers   'keep-alive': 'timeout=10, max=50',
31 verbose headers   connection: 'Keep-Alive' }
32 error publish Failed PUT 403
33 verbose stack Error: forbidden Attempting to modify version 0.1.3,
33 verbose stack which was previously published on 2014-12-04T17:48:32.254Z.
33 verbose stack This is forbidden, to maintain package integrity.
33 verbose stack Please update the version number and try again.: template-export
33 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
33 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
33 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:364:22)
33 verbose stack     at Request.emit (events.js:98:17)
33 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
33 verbose stack     at Request.emit (events.js:117:20)
33 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
33 verbose stack     at IncomingMessage.emit (events.js:117:20)
33 verbose stack     at _stream_readable.js:943:16
33 verbose stack     at process._tickCallback (node.js:419:13)
34 verbose statusCode 403
35 verbose pkgid template-export
36 verbose cwd /Users/lzilioli/Desktop/uitools/template-export
37 error Darwin 14.0.0
38 error argv "node" "/usr/local/bin/npm" "publish"
39 error node v0.10.33
40 error npm  v2.1.6
41 error code E403
42 error forbidden Attempting to modify version 0.1.3,
42 error which was previously published on 2014-12-04T17:48:32.254Z.
42 error This is forbidden, to maintain package integrity.
42 error Please update the version number and try again.: template-export
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
